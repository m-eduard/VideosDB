Starting audit...
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Action.java:6:19: Parameter actionId should be final. [FinalParameters]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Action.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Action.java:10:14: 'public' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Action.java:12:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getActionId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getActionId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\ActionCenter.java:29:27: 'switch' is not followed by whitespace. [WhitespaceAround]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\ActionCenter.java:30: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\ActionCenter.java:31: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\ActionCenter.java:41:5: Class 'ActionCenter' looks like designed for extension (can be subclassed), but the method 'apply' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionCenter' final or making the method 'apply' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\ActionCenter.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Command.java:46:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'apply' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'apply' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Command.java:93: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Command.java:103:24: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Command.java:105:25: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Query.java:4:18: Parameter actionId should be final. [FinalParameters]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Query.java:8:5: Class 'Query' looks like designed for extension (can be subclassed), but the method 'apply' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'apply' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Recommendation.java:4:27: Parameter actionId should be final. [FinalParameters]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\action\Recommendation.java:8:5: Class 'Recommendation' looks like designed for extension (can be subclassed), but the method 'apply' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommendation' final or making the method 'apply' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\actor\Actor.java:21:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\actor\Actor.java:25:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\actor\Actor.java:29:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\actor\Actor.java:33:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\actor\Actor.java:37:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\actor\Actor.java:41:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\actor\Actor.java:45:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\entertainment\Movie.java:19:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\entertainment\Movie.java:23:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\entertainment\Movie.java:27:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getViews' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getViews' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\entertainment\Serial.java:18:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'getNumberSeason' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'getNumberSeason' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\entertainment\Serial.java:22:5: Class 'Serial' looks like designed for extension (can be subclassed), but the method 'getSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Serial' final or making the method 'getSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\repository\Repository.java:7:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\repository\Repository.java:17:1: Class Repository should be declared as final. [FinalClass]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\repository\Repository.java:37:24: Parameter input should be final. [FinalParameters]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\repository\Repository.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\repository\Repository.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\repository\Repository.java:69:42: Parameter input should be final. [FinalParameters]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\repository\Repository.java:77:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\repository\Repository.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\user\User.java:31:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\user\User.java:35:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\user\User.java:39:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\user\User.java:43:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFavoriteMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFavoriteMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] H:\acs cti 321CA\POO\VideosDBFinal\.\src\user\User.java:47:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRated' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRated' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 42 errors.
